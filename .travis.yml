dist: trusty
sudo: false
cache:
    directories:
        - /home/travis/.nimble/

language: c

matrix:
  fast_finish: true
  include:
    - os: linux
      env:
          BUILD=linux
          CHANNEL=stable
          CROSS=""

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            # For cross-compiling to Windows.
            - binutils-mingw-w64-i686
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-i686
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-i686
            - g++-mingw-w64-x86-64
            - mingw-w64
      env:
          BUILD=windows
          CHANNEL=stable
          CROSS="-d:crosswin"

    - os: osx
      compiler: clang
      env:
          BUILD=osx
          CHANNEL=stable
          CROSS=""

before_install:
  # Install nim
  - export CHOOSENIM_NO_ANALYTICS=1
  - curl https://nim-lang.org/choosenim/init.sh -sSf > init.sh
  - sh init.sh -y
  - export PATH=/Users/travis/.nimble/bin:$PATH
  - export PATH=~/.nimble/bin:$PATH
  - echo "export PATH=~/.nimble/bin:$PATH" >> ~/.profile
  - choosenim $CHANNEL
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then export CC=x86_64-w64-mingw32-gcc; fi

script:
  - mkdir -p dist
  # pcre64.dll/pcre32.dll must be distributed with the Windows executable
  # - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then curl -O https://nim-lang.org/download/dlls.zip; unzip dlls.zip; fi
  - nimble build -y -d:release --passc:"-flto" $CROSS
  # - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then strip bin/github_release pcre64.dll; else strip bin/github_release; fi
  - mkdir -p github-release-$BUILD-amd64
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then mv bin/github_release github-release-$BUILD-amd64/github-release.exe; else cp bin/github_release github-release-$BUILD-amd64/github-release; fi
  # - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then mv pcre64.dll github-release-$BUILD-amd64; fi
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then zip -r9 dist/github-release-$BUILD-amd64.zip github-release-$BUILD-amd64; else tar cfJ dist/github-release-$BUILD-amd64.tar.xz github-release-$BUILD-amd64; fi

after_success:
  # - ./github-release release --token=$GITHUB_TOKEN --owner=kdheepak --repo=travis-nim --title=$TRAVIS_TAG --tag=$TRAVIS_TAG
  - nimble install
  - if [ $TRAVIS_OS_NAME == linux -a $BUILD == windows ]; then ./bin/github_release upload --token=$GITHUB_TOKEN --owner=kdheepak --repo=github-release --tag=releases --file=./dist/github-release-$BUILD-amd64.zip; else ./bin/github_release upload --token=$GITHUB_TOKEN --owner=kdheepak --repo=github-release --tag=releases --file=./dist/github-release-$BUILD-amd64.tar.xz; fi

notifications:
  email: false

branches:
  only:
    - master



